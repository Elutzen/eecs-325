(defun range (min max)
  (loop for number from min below max 
        collect number)


  (defun map-range (fn start end)
  (do ((number start (+ number (if (< start end) 1 -1)))
       (lst nil (cons (funcall fn number) lst)))
      ((= start end) lst)))


;; from here

(defun map-range (fn start end)
  (loop with step = (if (< start end) 1 -1)
        for number = start then (+ number step)
        until (= number end)
        collect (funcall fn number)))


;; From here
(defun map-range (fn start end)
  (do ((number start (+ number (if (< start end) 1 -1)
       (lst nil (cons (funcall fn number) lst)))
      ((= number end) (reverse lst))))
      
      (defun find-range (fn start end)
  (do ((number start (+ number (if (< start end) 1 -1)))
       (result nil 
               (if (and (funcall fn number) (null result)) 
                   number 
                 result)))
      ((= number end) result)))
